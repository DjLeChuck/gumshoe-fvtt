name: CI/CD

on:
  push

env:
  PACKAGE_NAME: "investigator"
  MANIFEST_NAME: "system.json"
  MANIFEST_PATH: "public/system.json"
  ZIP_FILE_NAME: "investigator.zip"

jobs:
  parse_tag:
    runs-on: ubuntu-latest
    environment: release
    outputs:
      tag_version: ${{ steps.get_tag_version.outputs.group1 }}
      tag_prerelease: ${{ steps.get_tag_version.outputs.group2 }}
    steps:
      - name: Get tag versions
        if: github.ref_type == 'tag'
        id: get_tag_version
        uses: actions-ecosystem/action-regex-match@v2.0.2
        with:
          regex: '^refs/tags\/(v\d+\.\d+\.\d+(?:$|(-[a-z0-9._-]+)))'
          text: ${{ github.ref }}

  instrument_parse_tag:
    runs-on: ubuntu-latest
    environment: release
    # if: github.ref_type == 'tag'
    needs: parse_tag
    steps:
      - name: Instrument tags capture
        run: |
          echo "tag_version: ${{ needs.parse_tag.outputs.tag_version }}"
          echo "tag_prerelease: ${{ needs.parse_tag.outputs.tag_prerelease }}"

  # update_manifest:
  #   runs-on: ubuntu-latest
  #   environment: release
  #   needs: parse_tag
  #   steps:
  #     - name: Update manifest
  #       if: github.ref_type == 'tag' && needs.parse_tag.outputs.tag_version != ''
  #       env:
  #         CI_COMMIT_TAG: ${{ needs.parse_tag.outputs.tag_version }}
  #         CI_PROJECT_PATH: ${{ github.repository }}
  #       run: |
  #         echo "CI_COMMIT_TAG: $CI_COMMIT_TAG"
  #         echo "CI_PROJECT_PATH: $CI_PROJECT_PATH"
  #         ./tasks.js updateManifestFromCIPush
  #         cat $MANIFEST_PATH

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: parse_tag
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Activate pnpm
        run: corepack enable

      - name: Instrumentation
        run: |
          pwd
          ls -l
          cat tsconfig.json
          export
          node --version
          pnpm --version

      - name: Install dependencies
        run: pnpm i

      - name: Instrument tsc version
        run: npx tsc --version

      - name: Update manifest
        if: github.ref_type == 'tag' && needs.parse_tag.outputs.tag_version != ''
        env:
          CI_COMMIT_TAG: ${{ needs.parse_tag.outputs.tag_version }}
          CI_PROJECT_PATH: ${{ github.repository }}
        run: |
          echo "CI_COMMIT_TAG: $CI_COMMIT_TAG"
          echo "CI_PROJECT_PATH: $CI_PROJECT_PATH"
          ./tasks.js updateManifestFromCIPush
          cat $MANIFEST_PATH

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm package


  # publish:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: release
  #   steps:
  #     - name: Update Release With Files
  #       uses: ncipollo/release-action@v1
  #       if: jobs.parse_tag.outputs.tag_version != ''
  #       with:
  #         allowUpdates: true
  #         name: ${{ jobs.parse_tag.outputs.tag_version }}
  #         draft: ${{ github.event.release.unpublished }}
  #         prerelease: ${{ github.event.release.prerelease }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         artifacts: './module.json, ./module.zip'
  #         tag: ${{ github.event.release.tag_name }}
  #         body: ${{ github.event.release.body }}
